{"version":3,"sources":["helpers.js","constants.js","actions.js","rootReducer.js","store.js","components/Transaction.js","styles/common.js","components/TransactionsGrid.js","containers/TransactionsGridContainer.js","components/Block.js","components/BlocksGrid.js","containers/BlocksGridContainer.js","components/BlockInfoPanel.js","containers/BlockInfoPanelContainer.js","components/WebsocketStatusPanel.js","containers/WebsocketStatusPanelContainer.js","styles/constants.js","App.js","serviceWorker.js","index.js"],"names":["formatTransaction","x","totalOutput","out","reduce","acc","i","value","hash","href","formatBlock","totalBTCSent","height","time","calculateTransactionShade","Math","pow","WEBSOCKET_REQUESTING","WEBSOCKET_OPEN","WEBSOCKET_CLOSE","WEBSOCKET_MESSAGE_TRANSACTION","WEBSOCKET_MESSAGE_BLOCK","WEBSOCKET_ERROR","websocketClose","message","type","payload","websocketConnect","uri","dispatch","timeout","ws","WebSocket","ping","send","setTimeout","onopen","setInterval","onclose","onmessage","event","block","transaction","JSON","parse","data","op","clearTimeout","websocketMessageBlock","onerror","initialState","websocketConnecting","websocketOpen","unconfirmedTransactions","currentBlockHeight","errorMessage","transactions","blocks","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","state","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","slice","applyMiddleware","thunkMiddleware","StyledTransaction","styled","div","_templateObject","_ref","theme","black","props","greenArray","shade","StyledAmount","_templateObject2","StyledLink","a","_templateObject3","_ref2","StyledHash","_templateObject4","Transaction","_ref3","react_default","createElement","rel","target","toFixed","StyledBlock","common_templateObject","StyledRow","common_templateObject2","StyledColumn","common_templateObject3","TransactionGridDiv","TransactionsGrid_templateObject","TransactionsGrid","map","components_Transaction","assign","key","TransactionsGridContainer","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","_this$props","components_TransactionsGrid","React","PureComponent","connect","StyledBtcBlock","Block_templateObject","greyArray","Block_templateObject2","StyledHeight","Block_templateObject3","StyledTime","Block_templateObject4","Block","Block_StyledLink","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","parseBlockDate","BlocksGridDiv","BlocksGrid_templateObject","BlocksGrid","components_Block","components_BlocksGrid","StyledTitle","BlockInfoPanel_templateObject","StyledUnconfirmedTransactions","BlockInfoPanel_templateObject2","StyledLabel","BlockInfoPanel_templateObject3","StyledCenteredRow","BlockInfoPanel_templateObject4","BlockInfoPanel","components_BlockInfoPanel","StyledBlockWithMargin","WebsocketStatusPanel_templateObject","WebsocketStatusPanel","components_WebsocketStatusPanel","white","lightGrey","mediumGrey","darkGrey","StyledColumnWithMediaQuery","App_templateObject","StyledRowWithMediaQuery","App_templateObject2","App","styled_components_browser_esm","className","containers_BlockInfoPanelContainer","WebsocketStatusPanelContainer","containers_BlocksGridContainer","containers_TransactionsGridContainer","Boolean","location","hostname","match","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5838706f.chunk.js","sourcesContent":["import { transactionExplorerUrl, blockExplorerUrl } from './constants'\n\nexport const formatTransaction = function formatTransaction(x) {\n  const totalOutput = x.out.reduce((acc, i) => {\n    return acc + (i.value || 0)\n  }, 0)\n\n  const { hash } = x\n  return {\n    hash,\n    value: totalOutput,\n    href: transactionExplorerUrl + hash\n  }\n}\n\nexport const formatBlock = function formatBlock(x) {\n  const { totalBTCSent, height, hash, time } = x\n  return {\n    totalBTCSent,\n    height,\n    hash,\n    time,\n    href: blockExplorerUrl + hash\n  }\n\n}\n\nexport const calculateTransactionShade = function calculateTransactionShade(x) {\n  // calculate shade integer between 0 and 5\n  const value = x / (10 ** 8)\n  if (value > 10) return 0\n  if (value > 1) return 1\n  if (value > .1) return 2\n  if (value > .01) return 3\n  if (value > .001) return 4\n  return 5\n}\n\n\nexport const calculateBlockShade = function calculateBlockShade(x) {\n  // calculate shade integer between 0 and 4\n  if (x > 15000) return 0\n  if (x > 12500) return 1\n  if (x > 7500) return 2\n  if (x > 5000) return 3\n  return 4\n}\n\nexport const parseBlockDate = function parseBlockDate(x) {\n  const date = new Date(Date(x));\n  return `${date.getUTCFullYear()}-${(`0${date.getUTCMonth() + 1}`).slice(-2)}-${(`0${date.getUTCDate()}`).slice(-2)} ${(`0${date.getUTCHours()}`).slice(-2)}:${(`0${date.getUTCMinutes()}`).slice(-2)}`\n}","export const websocketUri = 'wss://ws.blockchain.info/inv';\nexport const transactionExplorerUrl = 'https://www.blockchain.com/btc/tx/'\nexport const blockExplorerUrl = 'https://www.blockchain.com/btc/block/'","// websocket actions\nimport { formatTransaction, formatBlock } from './helpers'\n\nexport const WEBSOCKET_REQUESTING = 'WEBSOCKET_REQUESTING'\nexport const WEBSOCKET_OPEN = 'WEBSOCKET_OPEN';\nexport const WEBSOCKET_CLOSE = 'WEBSOCKET_CLOSE'\nexport const WEBSOCKET_MESSAGE_TRANSACTION = 'WEBSOCKET_MESSAGE_TRANSACTION'\nexport const WEBSOCKET_MESSAGE_BLOCK = 'WEBSOCKET_MESSAGE_BLOCK'\nexport const WEBSOCKET_ERROR = 'WEBSOCKET_ERROR'\n\n// other actions\nexport const BLOCK_CONFIRMED = 'BLOCK_CONFIRMED';\nexport const NEW_TRANSACTION = 'NEW_TRANSACTION';\n\n\nfunction websocketRequesting() {\n  return { type: WEBSOCKET_REQUESTING }\n};\n\nfunction websocketOpen() {\n  return { type: WEBSOCKET_OPEN }\n}\n\nfunction websocketClose(message) {\n  return {\n    type: WEBSOCKET_CLOSE,\n    payload: message\n  }\n}\n\nfunction websocketMessageTransaction(data) {\n  return {\n    type: WEBSOCKET_MESSAGE_TRANSACTION,\n    payload: data\n  }\n}\n\nfunction websocketMessageBlock(data) {\n  return {\n    type: WEBSOCKET_MESSAGE_BLOCK,\n    payload: data\n  }\n}\n\nfunction websocketError(message) {\n  return {\n    type: WEBSOCKET_ERROR,\n    payload: message\n  }\n}\n\nexport function websocketConnect(uri) {\n  return function handleWebsocket(dispatch) {\n    // alert client we're requesting to connect\n    dispatch(websocketRequesting(uri))\n\n    // open new websocket\n    const ws = new WebSocket(uri)\n    // handle response\n    let timeout;\n    function ping() {\n      ws.send('{\"op\":\"ping\"}');\n      timeout = setTimeout(() => {\n        dispatch(websocketClose('disconnected'))\n      }, 10000);\n    }\n\n    ws.onopen = () => {\n      ws.send('{\"op\":\"unconfirmed_sub\"}')\n      ws.send('{\"op\":\"blocks_sub\"}')\n      ws.send('{\"op\":\"ping_block\"}')\n      dispatch(websocketOpen());\n      setInterval(ping, 7000);\n      // setInterval(() => ws.send('{\"op\":\"ping_block\"}'), 5000) // for testing\n    }\n    ws.onclose = () => dispatch(websocketClose('disconnected'))\n    ws.onmessage = event => {\n      const message = JSON.parse(event.data)\n      let block;\n      let transaction;\n      switch (message.op) {\n        case 'pong':\n          return clearTimeout(timeout);\n        case 'utx':\n          transaction = formatTransaction(message.x)\n          return dispatch(websocketMessageTransaction(transaction))\n        case 'block':\n          block = formatBlock(message.x)\n          return dispatch(websocketMessageBlock(block))\n        default:\n          return false\n      }\n\n\n    }\n    ws.onerror = () => {\n      return dispatch(websocketError('error connecting'))\n    }\n  }\n}","import {\n  WEBSOCKET_REQUESTING,\n  WEBSOCKET_OPEN,\n  WEBSOCKET_CLOSE,\n  WEBSOCKET_MESSAGE_TRANSACTION,\n  WEBSOCKET_MESSAGE_BLOCK,\n  WEBSOCKET_ERROR\n} from './actions'\n\nconst initialState = {\n  // websocket status\n  websocketConnecting: false,\n  websocketOpen: false,\n\n  // meta data\n  unconfirmedTransactions: 0,\n  currentBlockHeight: 0,\n\n  // error handling\n  errorMessage: null,\n\n  // arrays\n  transactions: [],\n  blocks: []\n\n}\n\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case WEBSOCKET_REQUESTING:\n      return { ...state, websocketConnecting: true }\n    case WEBSOCKET_OPEN:\n      return { ...state, websocketConnecting: false, websocketOpen: true }\n    case WEBSOCKET_CLOSE:\n      return {\n        ...state,\n        websocketOpen: false,\n        websocketConnecting: false,\n        errorMessage: action.payload\n      }\n    case WEBSOCKET_MESSAGE_TRANSACTION:\n      return {\n        ...state,\n        websocketOpen: true,\n        websocketConnecting: false,\n        errorMessage: null,\n        unconfirmedTransactions: state.unconfirmedTransactions + 1,\n        transactions: [action.payload, ...state.transactions.slice(0, 199)]\n      }\n    case WEBSOCKET_MESSAGE_BLOCK:\n      return {\n        ...state,\n        websocketOpen: true,\n        websocketConnecting: false,\n        errorMessage: null,\n        currentBlockHeight: action.payload.height,\n        unconfirmedTransactions: 0,\n        transactions: [],\n        blocks: [action.payload, ...state.blocks.slice(0, 99)]\n      }\n    case WEBSOCKET_ERROR:\n      return {\n        ...state,\n        errorMessage: action.payload,\n        websocketConnecting: false,\n        websocketOpen: false\n      }\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './rootReducer';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(reducer, /* preloadedState, */ composeEnhancers(\n  applyMiddleware(thunkMiddleware)\n));\n","import React from 'react';\nimport styled from 'styled-components';\nimport { calculateTransactionShade } from '../helpers';\n\nconst StyledTransaction = styled.div`\n  display: table-row;\n  width: 100%;\n  color: ${({ theme }) => theme.black};\n  background-color: ${props => props.theme.greenArray[props.shade]};\n`;\n\nconst StyledAmount = styled.div`\ntext-align: right;\n`;\n\nconst StyledLink = styled.a`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 3px 10px;\n  margin: 1px;\n  color: ${({ theme }) => theme.black};\n  text-decoration: none;\n`;\n\nconst StyledHash = styled.div`\n  padding-left: 5px;\n`;\n\nconst Transaction = ({ value, hash, href }) => {\n  return (\n    <StyledTransaction shade={calculateTransactionShade(value)}>\n      <StyledLink href={href} rel=\"nonoopener noreferrer\" target=\"_blank\" >\n        <StyledAmount>{(value / 100000000).toFixed(8)}BTC</StyledAmount>\n        <StyledHash shade={calculateTransactionShade(value)}>{hash}</StyledHash>\n      </StyledLink>\n    </StyledTransaction >\n  )\n}\n\nexport default Transaction;","import styled from 'styled-components';\n\nexport const StyledBlock = styled.div`\n  word-wrap: break-word;\n`;\n\nexport const StyledRow = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledColumn = styled.div` \n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n  overflow: auto;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Transaction from './Transaction';\nimport { StyledBlock } from '../styles/common';\n\nconst TransactionGridDiv = styled(StyledBlock)`\n\tdisplay: inline-block;\n\tvertical-align: top;\n  overflow: auto;\n  flex: 1;\n`;\n\nconst TransactionsGrid = ({ transactions }) => {\n  return (\n    <TransactionGridDiv>\n      {transactions.map((data) =>\n        <Transaction\n          key={data.hash}\n          {...data} />\n      )}\n    </TransactionGridDiv>\n  )\n}\n\nexport default TransactionsGrid;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { websocketConnect } from '../actions';\nimport { websocketUri } from '../constants';\n\nimport TransactionsGrid from '../components/TransactionsGrid'\n\nconst TransactionsGridContainer = class extends React.PureComponent {\n  componentDidMount() {\n    const { transactions, dispatch } = this.props\n    if (transactions.length === 0) {\n      dispatch(websocketConnect(websocketUri))\n    }\n  }\n\n  render() {\n    return < TransactionsGrid {...this.props} />\n  }\n}\n\nconst mapStateToProps = ({ transactions }) => {\n  return { transactions }\n}\n\nexport default connect(mapStateToProps)(TransactionsGridContainer)","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { calculateBlockShade, parseBlockDate } from '../helpers';\n\nconst StyledBtcBlock = styled.div`\n  width: 100%;\n  max-width: 225px;\n  font-size: 1.4rem;\n  text-align: center;\n  background: ${props => props.theme.greyArray[props.shade]};\n`;\n\nconst StyledLink = styled.a`\n  color: ${({ theme }) => theme.black};\n  text-decoration: none;\n  word-wrap: break-word;\n`;\n\nconst StyledHeight = styled.div`\n  font-size: 1.32em;\n  font-weight: bold;\n`;\nconst StyledTime = styled.div`\n  font-size: 1em;\n  font-weight: bold;\n`;\n\nconst Block = ({ totalBTCSent, height, hash, href, time }) => {\n  return (\n    <StyledBtcBlock shade={calculateBlockShade(totalBTCSent)}>\n      <StyledLink href={href} rel=\"nonoopener noreferrer\" target=\"_blank\" >\n        <StyledHeight>BLOCK {height}</StyledHeight>\n        <StyledTime>{parseBlockDate(time)}</StyledTime>\n        {hash}\n      </StyledLink>\n    </StyledBtcBlock>\n  )\n}\n\nBlock.propTypes = {\n  totalBTCSent: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  hash: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired\n}\n\nexport default Block;","import React from 'react';\nimport styled from 'styled-components';\nimport Block from './Block';\n\nconst BlocksGridDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  vertical-align: top;\n  overflow: scroll;\n  word-wrap: break-word;\n\n  @media (max-width: 700px) {\n    width: 100%;\n    flex-direction: row;\n  }\n`;\n\nconst BlocksGrid = ({ blocks }) => {\n  return (\n    <BlocksGridDiv>\n      {blocks.map((data) =>\n        <Block\n          key={data.hash}\n          {...data} />\n      )}\n    </BlocksGridDiv>\n  )\n}\n\nexport default BlocksGrid;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport BlocksGrid from '../components/BlocksGrid'\n\nconst BlocksGridContainer = props => <BlocksGrid {...props} />\n\nconst mapStateToProps = ({ blocks }) => {\n  return { blocks }\n}\n\nexport default connect(mapStateToProps)(BlocksGridContainer)","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { StyledBlock, StyledRow } from '../styles/common';\n\nconst StyledTitle = styled.div`\n  font-size: 4.2em;\n  font-weight: bold;\n`;\n\nconst StyledUnconfirmedTransactions = styled.div`\n  font-size: 1.4em;\n  font-weight: bold;\n  padding: 15px;\n`;\n\nconst StyledLabel = styled.div`\n  font-size: 1em;\n`;\n\nconst StyledCenteredRow = styled(StyledRow)`\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width:700px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst BlockInfoPanel = ({ currentBlockHeight, unconfirmedTransactions }) => {\n  return (\n    <StyledBlock>\n      <StyledTitle>{currentBlockHeight || '000000'}</StyledTitle>\n      <StyledCenteredRow>\n        <StyledLabel>Seen Transactions<br /> in Current Block:</StyledLabel>\n        <StyledUnconfirmedTransactions>{unconfirmedTransactions}</StyledUnconfirmedTransactions>\n      </StyledCenteredRow>\n    </StyledBlock>\n  )\n}\n\nBlockInfoPanel.propTypes = {\n  currentBlockHeight: PropTypes.number.isRequired,\n  unconfirmedTransactions: PropTypes.number.isRequired,\n}\n\nexport default BlockInfoPanel;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport BlockInfoPanel from '../components/BlockInfoPanel'\n\nconst BlockInfoPanelContainer = props => <BlockInfoPanel {...props} />\n\nconst mapStateToProps = state => {\n  const { currentBlockHeight, unconfirmedTransactions } = state\n  return { currentBlockHeight, unconfirmedTransactions }\n}\n\nexport default connect(mapStateToProps)(BlockInfoPanelContainer)","import React from 'react';\nimport styled from 'styled-components';\nimport { StyledBlock } from '../styles/common';\n\nconst StyledBlockWithMargin = styled(StyledBlock)`\nmargin-bottom: 12px;\n`;\n\nconst WebsocketStatusPanel = ({ websocketConnecting, websocketOpen, errorMessage }) => {\n  return (\n    <StyledBlockWithMargin>\n      {websocketConnecting && <div>Websocket connecting...</div>}\n      {websocketOpen && <div>Websocket connected</div>}\n      {errorMessage && <div>{errorMessage}</div>}\n    </StyledBlockWithMargin>\n  )\n}\n\nexport default WebsocketStatusPanel;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport WebsocketStatusPanel from '../components/WebsocketStatusPanel'\n\nconst WebsocketStatusContainer = props => <WebsocketStatusPanel {...props} />\n\nconst mapStateToProps = ({ websocketConnecting, websocketOpen, errorMessage }) => {\n  return { websocketConnecting, websocketOpen, errorMessage }\n}\n\nexport default connect(mapStateToProps)(WebsocketStatusContainer)","// eslint-disable-next-line import/prefer-default-export\nexport const theme = {\n  white: '#EAECEE',\n  lightGrey: '#ADBCB4',\n  mediumGrey: '#6B746F',\n  darkGrey: '#404643',\n  black: '#161817',\n  greenArray: [\n    '#256E49',\n    '#1E8855',\n    '#22A369',\n    '#62C18F',\n    '#A7E5C4',\n    '#EAFFF4'\n  ],\n  greyArray: [\n    '#e1e6e3',\n    '#cad4cf',\n    '#b4c2ba',\n    '#9eaba4',\n    '#8e9a94'\n\n  ]\n}","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components'\nimport './App.css';\nimport TransactionsGridContainer from './containers/TransactionsGridContainer';\nimport BlocksGridContainer from './containers/BlocksGridContainer';\nimport BlockInfoPanelContainer from './containers/BlockInfoPanelContainer';\nimport WebsocketStatusPanelContainer from './containers/WebsocketStatusPanelContainer';\n\nimport { StyledRow, StyledColumn } from './styles/common';\nimport { theme } from './styles/constants';\n\n\nconst StyledColumnWithMediaQuery = styled(StyledColumn)`\n  @media (max-width: 700px) {\n    flex-direction: row;\n    height: inherit;\n    width: 100%;\n  }\n`;\n\nconst StyledRowWithMediaQuery = styled(StyledRow)`\n  @media (max-width: 700px) {\n    flex-direction: column;\n  }\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <StyledRowWithMediaQuery>\n          <StyledColumnWithMediaQuery >\n            <BlockInfoPanelContainer />\n            <WebsocketStatusPanelContainer />\n            <BlocksGridContainer />\n          </StyledColumnWithMediaQuery>\n          <TransactionsGridContainer />\n        </StyledRowWithMediaQuery>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}